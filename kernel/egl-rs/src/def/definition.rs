#[allow(non_snake_case)]
pub mod Definition {
    pub const VERSION_1_0: libc::c_int = 1;
    pub const VERSION_1_1: libc::c_int = 1;
    pub const VERSION_1_2: libc::c_int = 1;
    pub const VERSION_1_3: libc::c_int = 1;
    pub const VERSION_1_4: libc::c_int = 1;
    pub const FALSE: libc::c_int = 0;
    pub const TRUE: libc::c_int = 1;
    pub const DONT_CARE: libc::c_int = -1;
    pub const CONTEXT_LOST: libc::c_int = 12302;
    pub const BUFFER_SIZE: libc::c_int = 12320;
    pub const ALPHA_SIZE: libc::c_int = 12321;
    pub const BLUE_SIZE: libc::c_int = 12322;
    pub const GREEN_SIZE: libc::c_int = 12323;
    pub const RED_SIZE: libc::c_int = 12324;
    pub const DEPTH_SIZE: libc::c_int = 12325;
    pub const STENCIL_SIZE: libc::c_int = 12326;
    pub const CONFIG_CAVEAT: libc::c_int = 12327;
    pub const CONFIG_ID: libc::c_int = 12328;
    pub const LEVEL: libc::c_int = 12329;
    pub const MAX_PBUFFER_HEIGHT: libc::c_int = 12330;
    pub const MAX_PBUFFER_PIXELS: libc::c_int = 12331;
    pub const MAX_PBUFFER_WIDTH: libc::c_int = 12332;
    pub const NATIVE_RENDERABLE: libc::c_int = 12333;
    pub const NATIVE_VISUAL_ID: libc::c_int = 12334;
    pub const NATIVE_VISUAL_TYPE: libc::c_int = 12335;
    pub const PRESERVED_RESOURCES: libc::c_int = 12336;
    pub const SAMPLES: libc::c_int = 12337;
    pub const SAMPLE_BUFFERS: libc::c_int = 12338;
    pub const SURFACE_TYPE: libc::c_int = 12339;
    pub const TRANSPARENT_TYPE: libc::c_int = 12340;
    pub const TRANSPARENT_BLUE_VALUE: libc::c_int = 12341;
    pub const TRANSPARENT_GREEN_VALUE: libc::c_int = 12342;
    pub const TRANSPARENT_RED_VALUE: libc::c_int = 12343;
    pub const NONE: libc::c_int = 12344;
    pub const BIND_TO_TEXTURE_RGB: libc::c_int = 12345;
    pub const BIND_TO_TEXTURE_RGBA: libc::c_int = 12346;
    pub const MIN_SWAP_INTERVAL: libc::c_int = 12347;
    pub const MAX_SWAP_INTERVAL: libc::c_int = 12348;
    pub const LUMINANCE_SIZE: libc::c_int = 12349;
    pub const ALPHA_MASK_SIZE: libc::c_int = 12350;
    pub const COLOR_BUFFER_TYPE: libc::c_int = 12351;
    pub const RENDERABLE_TYPE: libc::c_int = 12352;
    pub const MATCH_NATIVE_PIXMAP: libc::c_int = 12353;
    pub const CONFORMANT: libc::c_int = 12354;
    pub const SLOW_CONFIG: libc::c_int = 12368;
    pub const NON_CONFORMANT_CONFIG: libc::c_int = 12369;
    pub const TRANSPARENT_RGB: libc::c_int = 12370;
    pub const RGB_BUFFER: libc::c_int = 12430;
    pub const LUMINANCE_BUFFER: libc::c_int = 12431;
    pub const NO_TEXTURE: libc::c_int = 12380;
    pub const TEXTURE_RGB: libc::c_int = 12381;
    pub const TEXTURE_RGBA: libc::c_int = 12382;
    pub const TEXTURE_2D: libc::c_int = 12383;
    pub const PBUFFER_BIT: libc::c_int = 1;
    pub const PIXMAP_BIT: libc::c_int = 2;
    pub const WINDOW_BIT: libc::c_int = 4;
    pub const VG_COLORSPACE_LINEAR_BIT: libc::c_int = 32;
    pub const VG_ALPHA_FORMAT_PRE_BIT: libc::c_int = 64;
    pub const MULTISAMPLE_RESOLVE_BOX_BIT: libc::c_int = 512;
    pub const SWAP_BEHAVIOR_PRESERVED_BIT: libc::c_int = 1024;
    pub const OPENGL_ES_BIT: libc::c_int = 1;
    pub const OPENVG_BIT: libc::c_int = 2;
    pub const OPENGL_ES2_BIT: libc::c_int = 4;
    pub const OPENGL_BIT: libc::c_int = 8;
    pub const OPENGL_ES3_BIT: libc::c_int = 64;
    pub const VENDOR: libc::c_int = 12371;
    pub const VERSION: libc::c_int = 12372;
    pub const EXTENSIONS: libc::c_int = 12373;
    pub const CLIENT_APIS: libc::c_int = 12429;
    pub const HEIGHT: libc::c_int = 12374;
    pub const WIDTH: libc::c_int = 12375;
    pub const LARGEST_PBUFFER: libc::c_int = 12376;
    pub const TEXTURE_FORMAT: libc::c_int = 12416;
    pub const TEXTURE_TARGET: libc::c_int = 12417;
    pub const MIPMAP_TEXTURE: libc::c_int = 12418;
    pub const MIPMAP_LEVEL: libc::c_int = 12419;
    pub const RENDER_BUFFER: libc::c_int = 12422;
    pub const VG_COLORSPACE: libc::c_int = 12423;
    pub const VG_ALPHA_FORMAT: libc::c_int = 12424;
    pub const HORIZONTAL_RESOLUTION: libc::c_int = 12432;
    pub const VERTICAL_RESOLUTION: libc::c_int = 12433;
    pub const PIXEL_ASPECT_RATIO: libc::c_int = 12434;
    pub const SWAP_BEHAVIOR: libc::c_int = 12435;
    pub const MULTISAMPLE_RESOLVE: libc::c_int = 12441;
    pub const BACK_BUFFER: libc::c_int = 12420;
    pub const SINGLE_BUFFER: libc::c_int = 12421;
    pub const VG_COLORSPACE_S_RGB: libc::c_int = 12425;
    pub const VG_COLORSPACE_LINEAR: libc::c_int = 12426;
    pub const VG_ALPHA_FORMAT_NONPRE: libc::c_int = 12427;
    pub const VG_ALPHA_FORMAT_PRE: libc::c_int = 12428;
    pub const DISPLAY_SCALING: libc::c_int = 10000;
    pub const UNKNOWN: libc::c_int = -1;
    pub const BUFFER_PRESERVED: libc::c_int = 12436;
    pub const BUFFER_DESTROYED: libc::c_int = 12437;
    pub const OPENVG_IMAGE: libc::c_int = 12438;
    pub const CONTEXT_CLIENT_TYPE: libc::c_int = 12439;
    pub const CONTEXT_CLIENT_VERSION: libc::c_int = 12440;
    pub const MULTISAMPLE_RESOLVE_DEFAULT: libc::c_int = 12442;
    pub const MULTISAMPLE_RESOLVE_BOX: libc::c_int = 12443;
    pub const OPENGL_ES_API: libc::c_int = 12448;
    pub const OPENVG_API: libc::c_int = 12449;
    pub const OPENGL_API: libc::c_int = 12450;
    pub const DRAW: libc::c_int = 12377;
    pub const READ: libc::c_int = 12378;
    pub const CORE_NATIVE_ENGINE: libc::c_int = 12379;
    pub const COLORSPACE: libc::c_int = 12423; //VG_COLORSPACE;
    pub const ALPHA_FORMAT: libc::c_int = 12424; //VG_ALPHA_FORMAT;
    pub const COLORSPACE_S_RGB: libc::c_int = 12425; //VG_COLORSPACE_sRGB;
    pub const COLORSPACE_LINEAR: libc::c_int = 12426; //VG_COLORSPACE_LINEAR;
    pub const ALPHA_FORMAT_NONPRE: libc::c_int = 12427; //VG_ALPHA_FORMAT_NONPRE;
    pub const ALPHA_FORMAT_PRE: libc::c_int = 12428; //VG_ALPHA_FORMAT_PRE;

    // EGL_ANGLE_d3d_share_handle_client_buffer
    pub const D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE: libc::c_int = 0x3200;
    // EGL_ANGLE_window_fixed_size
    pub const FIXED_SIZE_ANGLE: libc::c_int = 0x3201;
    // // EGL_ANGLE_software_display
    // public static readonly EGLNativeDisplayType SOFTWARE_DISPLAY_ANGLE = new EGLNativeDisplayType(-1);
    pub const SOFTWARE_DISPLAY_ANGLE: libc::c_int = -1;
    // // EGL_ANGLE_direct3d_display
    // public static readonly EGLNativeDisplayType D3D11_ELSE_D3D9_DISPLAY_ANGLE = new EGLNativeDisplayType(-2);
    pub const D3D11_ELSE_D3D9_DISPLAY_ANGLE: libc::c_int = -2;
    // public static readonly EGLNativeDisplayType D3D11_ONLY_DISPLAY_ANGLE = new EGLNativeDisplayType(-3);
    pub const D3D11_ONLY_DISPLAY_ANGLE: libc::c_int = -3;
    // EGL_ANGLE_device_d3d
    pub const D3D9_DEVICE_ANGLE: libc::c_int = 0x33A0;
    pub const D3D11_DEVICE_ANGLE: libc::c_int = 0x33A1;
    // EGL_ANGLE_platform_angle
    pub const PLATFORM_ANGLE_ANGLE: libc::c_int = 0x3202;
    pub const PLATFORM_ANGLE_TYPE_ANGLE: libc::c_int = 0x3203;
    pub const PLATFORM_ANGLE_MAX_VERSION_MAJOR_ANGLE: libc::c_int = 0x3204;
    pub const PLATFORM_ANGLE_MAX_VERSION_MINOR_ANGLE: libc::c_int = 0x3205;
    pub const PLATFORM_ANGLE_TYPE_DEFAULT_ANGLE: libc::c_int = 0x3206;
    // EGL_ANGLE_platform_angle_d3d
    pub const PLATFORM_ANGLE_TYPE_D3D9_ANGLE: libc::c_int = 0x3207;
    pub const PLATFORM_ANGLE_TYPE_D3D11_ANGLE: libc::c_int = 0x3208;
    pub const PLATFORM_ANGLE_DEVICE_TYPE_ANGLE: libc::c_int = 0x3209;
    pub const PLATFORM_ANGLE_DEVICE_TYPE_HARDWARE_ANGLE: libc::c_int = 0x320A;
    pub const PLATFORM_ANGLE_DEVICE_TYPE_WARP_ANGLE: libc::c_int = 0x320B;
    pub const PLATFORM_ANGLE_DEVICE_TYPE_REFERENCE_ANGLE: libc::c_int = 0x320C;
    pub const PLATFORM_ANGLE_ENABLE_AUTOMATIC_TRIM_ANGLE: libc::c_int = 0x320F;
    // EGL_ANGLE_platform_angle_opengl
    pub const PLATFORM_ANGLE_TYPE_OPENGL_ANGLE: libc::c_int = 0x320D;
    pub const PLATFORM_ANGLE_TYPE_OPEN_GLES_ANGLE: libc::c_int = 0x320E;

    pub const EGL_DONT_CARE: libc::c_int = -1;
}